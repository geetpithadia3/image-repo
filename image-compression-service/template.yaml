AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  image-compression-service

  Sample SAM Template for image-compression-service

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 300
    MemorySize: 128

Parameters:
  ImageRepoBucketName:
    Type: String
    Description: Name of the S3 bucket to store images
    Default: image-repo-bucket

Resources:
  ImageRepoBucket: 
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Ref ImageRepoBucketName

  ImageRepoBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ImageRepoBucket
      PolicyDocument:
        Statement:
          - Action:
              - s3:DeleteBucket
            Effect: Allow
            Resource: !Sub "arn:aws:s3:::${ImageRepoBucket}"
            Principal:
              AWS: !Join ["", ["arn:aws:iam::", !Ref AWS::AccountId, ":root"]]
          - Action:
              - s3:DeleteObject
            Effect: Allow
            Resource: !Sub "arn:aws:s3:::${ImageRepoBucket}/*"
            Principal:
              AWS: !Join ["", ["arn:aws:iam::", !Ref AWS::AccountId, ":root"]]

  ImageCompressorFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: image-compressor-lambda/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
      Events:
        FileUploadEvent:
          Type: S3
          Properties:
            Bucket: !Ref ImageRepoBucket
            Events: s3:ObjectCreated:*
      Role: !ImportValue S3LambdaRoleArn      
